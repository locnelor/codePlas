# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type SysMenuEntity {
  id: Int!
  createAt: DateTime!
  updateAt: DateTime!
  name: String!
  path: String!
  role: Int!
  comment: String
  parentId: Int
  parent: SysMenuEntity
  children: [SysMenuEntity!]
  sys_menu_on_role: [SysMenuOnRoleEntity!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type SysMenuOnRoleEntity {
  power: Int!
  sys_roleId: Int!
  sys_menuId: Int!
  role: SysRoleEntity
  menu: SysMenuEntity
}

type SysRoleEntity {
  id: Int!
  createAt: DateTime!
  updateAt: DateTime!
  name: String!
  status: Boolean!
  comment: String
  sys_menu_on_role: [SysMenuOnRoleEntity!]
  sys_user: [SysUserEntity!]
}

type SysUserEntity {
  id: Int!
  createAt: DateTime!
  updateAt: DateTime!
  name: String!
  account: String!
  sys_roleId: Int!
  loginId: String
  role: SysRoleEntity
}

type UserPagination {
  total: Int!
  page: Int!
  size: Int!
  data: [SysUserEntity!]!
}

type SysNoticeEntity {
  id: Int!
  createAt: DateTime!
  updateAt: DateTime!
  type: String!
  view: Int!
  title: String!
  sys_userId: Float!
  creator: SysUserEntity
  context: String
}

type NoticePagination {
  total: Int!
  page: Int!
  size: Int!
  data: [SysNoticeEntity!]!
}

type SysPartnerEntity {
  id: Int!
  createAt: DateTime!
  updateAt: DateTime!
  name: String!
  order: Int!
}

type SysSoftwarePlatformEntity {
  id: Int!
  createAt: DateTime!
  updateAt: DateTime!
  title: String!
  href: String!
  description: String!
}

type SysOutlineEntity {
  id: Int!
  createAt: DateTime!
  updateAt: DateTime!
  order: Int!
  status: Boolean!
  comment: String
  name: String!
}

type SysGroupEntity {
  id: Int!
  createAt: DateTime!
  updateAt: DateTime!
  name: String!
}

type SysTestSourceEntity {
  id: Int!
  createAt: DateTime!
  updateAt: DateTime!
  name: String!
  href: String!
  sys_testId: Int!
  sys_test: SysTestEntity
}

type SysTestPaperEntity {
  id: Int!
  createAt: DateTime!
  updateAt: DateTime!
  sys_userId: Int!
  sys_test_chapterId: Int!
  is_end: Boolean!
  correct: Int!
  wrong: Int!
  un_answer: Int!
  score: Int!
  sys_test_paper_question: [SysTestPaperQuestionEntity!]
}

type SysTestPaperQuestionEntity {
  id: Int!
  createAt: DateTime!
  updateAt: DateTime!
  sys_test_paperId: Int!
  paper: SysTestPaperEntity
  questions: [SysTestPaperOnQuestionEntity!]
}

type SysTestPaperOnQuestionEntity {
  sys_test_paper_questionId: Int!
  sys_test_questionId: Int!
  answer: String!
  paper: [SysTestPaperQuestionEntity!]
  question: [SysTestQuestionEntity!]
}

type SysTestQuestionEntity {
  id: Int!
  createAt: DateTime!
  updateAt: DateTime!
  title: String!
  answer: String!
  type: String!
  context: String!
  order: Int!
  sys_test_chapterId: Int!
  test_count: Int!
  test_right_count: Int!
  chapter: SysTestChapterEntity
  sys_test_paper_on_question: [SysTestPaperOnQuestionEntity!]
}

type SysTestChapterEntity {
  id: Int!
  createAt: DateTime!
  updateAt: DateTime!
  name: String!
  order: Int!
  sys_test_groupId: Int!
  sys_test_question: [SysTestQuestionEntity!]
  sys_test_paper: [SysTestPaperEntity!]
  desc: String
}

type SysTestEntity {
  id: Int!
  createAt: DateTime!
  updateAt: DateTime!
  sys_groupId: Int!
  name: String!
  group: SysGroupEntity
  sources: [SysTestSourceEntity!]
  sys_test_chapter: [SysTestChapterEntity!]
}

type SysTestGroupEntity {
  id: Int!
  createAt: DateTime!
  updateAt: DateTime!
  is_test: Boolean!
  name: String!
  order: Int!
  sys_testId: Int!
  sys_test_chapter: [SysTestChapterEntity!]
  PDF: String!
  PPT: String!
  test: Boolean!
}

type Query {
  getCurrentTotal: Int!
  viewer: SysUserEntity!
  isAdmin: Boolean!
  findUsers(page: Int!, size: Int!, id: Int, account: String, name: String, sys_roleId: Int): UserPagination!
  getMenu: [SysMenuEntity!]!
  getRole(id: Int, name: String, status: Boolean, comment: String): [SysRoleEntity!]!
  getNotices(page: Int!, size: Int!, title: String, type: String, id: Int, orderBy: String): NoticePagination!
  getNoticeById(id: Int!): SysNoticeEntity!
  queryPartner: [SysPartnerEntity!]!
  querySoftware: [SysSoftwarePlatformEntity!]!
  queryOutline: [SysOutlineEntity!]!
  queryGroups: [SysGroupEntity!]!
  queryTests(sys_groupId: Int!): [SysTestEntity!]!
  queryTestChapter(sys_test_groupId: Int): [SysTestChapterEntity!]!
  queryTestQuestion(sys_test_chapterId: Int!): [SysTestQuestionEntity!]!
}

type Mutation {
  initAdmin(account: String!, password: String!, name: String!): Boolean!
  auth(account: String!, password: String!): String!
  createUser(name: String!, account: String!, password: String!, sys_roleId: Int): SysUserEntity!
  updateUser(id: Int!, account: String, password: String, name: String, sys_roleId: Int): SysUserEntity!
  deleteUser(id: Int!): SysUserEntity!
  createRole(name: String!, status: Boolean! = true, comment: String, sys_menu_on_role: [SysMenuOnRoleInput!]): SysRoleEntity!
  updateRole(id: Int!, name: String, status: Boolean, comment: String, sys_menu_on_role: [SysMenuOnRoleInput!]): SysRoleEntity!
  deleteRole(ids: [Int!]!): Int!
  createNotice(title: String!, type: String!): SysNoticeEntity!
  updateNotice(id: Int!, title: String!, type: String!): SysNoticeEntity!
  deleteNotice(ids: [Int!]!): Int!
  updateNoticeContext(context: String!, id: Int!): Boolean!
  createPartner(name: String!, order: Int!): SysPartnerEntity!
  updatePartner(id: Int!, name: String!, order: Int!): SysPartnerEntity!
  deletePartner(ids: [Int!]!): Int!
  createSoftware(base64: String!, title: String!, href: String!, description: String!): SysSoftwarePlatformEntity!
  updateSoftware(id: Int!, title: String!, href: String!, description: String!, base64: String): SysSoftwarePlatformEntity!
  deleteSoftware(ids: [Int!]!): Int!
  createOutline(name: String!, order: Int, status: Boolean, comment: String): SysOutlineEntity!
  updateOutline(name: String!, order: Int, status: Boolean, comment: String, id: Int!): SysOutlineEntity!
  deleteOutline(ids: [Int!]!): Int!
  createGroup(name: String!, base64: String!): SysGroupEntity!
  updateGroup(id: Int!, name: String!, base64: String): SysGroupEntity!
  deleteGroup(id: Int!): SysGroupEntity!
  createTest(sys_groupId: Int!, name: String!, base64: String!): SysTestEntity!
  updateTest(id: Int!, name: String!, base64: String): SysTestEntity!
  deleteTest(id: Int!): SysTestEntity!
  createTestGroup(sys_testId: Int!, name: String!, PDF: String, PPT: String, is_test: Boolean): SysTestGroupEntity!
  updateTestGroup(id: Int!, name: String!, PDF: String, PPT: String, is_test: Boolean): SysTestGroupEntity!
  deleteTestGroup(id: Int!): SysTestGroupEntity!
  createTestChapter(sys_test_groupId: Int!, name: String!, order: Int, desc: String): SysTestChapterEntity!
  updateTestChapter(id: Int!, name: String!, order: Int, desc: String): SysTestChapterEntity!
  deleteTestChapter(id: Int!): SysTestChapterEntity!
  createTestQuestion(title: String!, answer: String!, type: String!, context: String!, sys_test_chapterId: Int!, order: Int): SysTestQuestionEntity!
  updateTestQuestion(id: Int!, title: String!, answer: String!, type: String!, context: String!, sys_test_chapterId: Int!, order: Int): SysTestQuestionEntity!
  deleteTestQuestion(id: Int!): SysTestQuestionEntity!
}

input SysMenuOnRoleInput {
  sys_roleId: Int
  sys_menuId: Int
  power: Int!
}