// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model sys_user {
  id         Int          @id @default(autoincrement())
  createAt   DateTime     @default(now())
  updateAt   DateTime     @default(now()) @updatedAt
  name       String
  account    String       @unique
  role       sys_role?    @relation(fields: [sys_roleId], references: [id])
  sys_roleId Int?
  password   String
  salt       String
  loginId    String?
  sys_notice sys_notice[]
}

//权限菜单
model sys_menu {
  id               Int                @id @default(autoincrement())
  createAt         DateTime           @default(now())
  updateAt         DateTime           @default(now()) @updatedAt
  name             String
  path             String             @unique
  role             Int
  comment          String?            @db.Text
  parent           sys_menu?          @relation("SysMenuParent", fields: [parentId], references: [id])
  parentId         Int?
  children         sys_menu[]         @relation("SysMenuParent")
  sys_menu_on_role sys_menu_on_role[]
}

//权限树 on 角色
model sys_menu_on_role {
  role       sys_role @relation(fields: [sys_roleId], references: [id])
  sys_roleId Int
  menu       sys_menu @relation(fields: [sys_menuId], references: [id])
  sys_menuId Int
  power      Int      @default(0)

  @@id([sys_roleId, sys_menuId])
}

// 角色
model sys_role {
  id               Int                @id @default(autoincrement())
  createAt         DateTime           @default(now())
  updateAt         DateTime           @default(now()) @updatedAt
  name             String             @unique
  status           Boolean            @default(true)
  comment          String?            @db.LongText
  sys_menu_on_role sys_menu_on_role[]
  sys_user         sys_user[]
}

enum notice_type {
  WEBSITE //站务公告
  TEST_INFO //考试信息
  DYNAMIC //行业动态
  EXPERIENCE //经验交流
}

model sys_notice {
  id         Int         @id @default(autoincrement())
  createAt   DateTime    @default(now())
  updateAt   DateTime    @default(now()) @updatedAt
  view       Int         @default(0)
  title      String
  creator    sys_user    @relation(fields: [sys_userId], references: [id])
  sys_userId Int
  type       notice_type
}

//软件平台
model sys_software_platform {
  id          Int      @id @default(autoincrement())
  createAt    DateTime @default(now())
  updateAt    DateTime @default(now()) @updatedAt
  title       String
  href        String
  description String   @db.Text
}

//合作机构名单
model sys_partner {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @default(now()) @updatedAt
  name     String
  order    Int      @default(0)
}

//知识大纲组
model sys_outline {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @default(now()) @updatedAt
  name     String
  order    Int      @default(0)
  status   Boolean  @default(true)
  comment  String?  @db.Text
}

//模拟测试组
model sys_test_group {
  id       Int        @id @default(autoincrement())
  createAt DateTime   @default(now())
  updateAt DateTime   @default(now()) @updatedAt
  name     String
  order    Int        @default(0)
  status   Boolean    @default(true)
  desc     String?    @db.Text
  tests    sys_test[]
}

//模拟测试
model sys_test {
  id               Int                @id @default(autoincrement())
  createAt         DateTime           @default(now())
  updateAt         DateTime           @default(now()) @updatedAt
  name             String
  order            Int                @default(0)
  status           Boolean            @default(true)
  desc             String?            @db.Text
  group            sys_test_group     @relation(fields: [sys_test_groupId], references: [id])
  sys_test_groupId Int
  chapters         sys_test_chapter[]
}

//模拟测试章节

model sys_test_chapter {
  id         Int              @id @default(autoincrement())
  createAt   DateTime         @default(now())
  updateAt   DateTime         @default(now()) @updatedAt
  name       String
  order      Int              @default(0)
  status     Boolean          @default(true)
  desc       String?          @db.Text
  PPT        String? //PPT资源
  PDF        String? //PDF资源
  video      String? //视频资源
  one2one    String? //一对一资源
  outline    String? //大纲资源
  money      Int              @default(0) //需要的金币
  is_test    Boolean          @default(false) //是否拥有随机试题
  test       sys_test         @relation(fields: [sys_testId], references: [id])
  sys_testId Int
  papers     sys_test_paper[]
}

//模拟测试试卷
model sys_test_paper {
  id                 Int                 @id @default(autoincrement())
  createAt           DateTime            @default(now())
  updateAt           DateTime            @default(now()) @updatedAt
  name               String
  order              Int                 @default(0)
  status             Boolean             @default(true)
  desc               String?             @db.Text
  chapter            sys_test_chapter    @relation(fields: [sys_test_chapterId], references: [id])
  sys_test_chapterId Int
  is_free            Boolean             @default(false) //是否免费
  questions          sys_test_question[]
}

//模拟测试题目

model sys_test_question {
  id               Int             @id @default(autoincrement())
  createAt         DateTime        @default(now())
  updateAt         DateTime        @default(now()) @updatedAt
  name             String
  order            Int             @default(0)
  status           Boolean         @default(true)
  desc             String?         @db.Text
  sys_test_paper   sys_test_paper? @relation(fields: [sys_test_paperId], references: [id])
  sys_test_paperId Int?
}

model sys_paper {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @default(now()) @updatedAt
}

//测试组
// model sys_group {
//   id       Int        @id @default(autoincrement())
//   createAt DateTime   @default(now())
//   updateAt DateTime   @default(now()) @updatedAt
//   name     String
//   sys_test sys_test[]
// }

// //模拟测试
// model sys_test {
//   id             Int               @id @default(autoincrement())
//   createAt       DateTime          @default(now())
//   updateAt       DateTime          @default(now()) @updatedAt
//   group          sys_group         @relation(fields: [sys_groupId], references: [id])
//   name           String
//   sources        sys_test_source[]
//   sys_test_group sys_test_group[]
//   sys_groupId    Int
// }

// //模拟测试题目组
// model sys_test_group {
//   id         Int      @id @default(autoincrement())
//   createAt   DateTime @default(now())
//   updateAt   DateTime @default(now()) @updatedAt
//   name       String
//   is_test    Boolean  @default(false) //是否拥有随机试题
//   order      Int      @default(0)
//   test       sys_test @relation(fields: [sys_testId], references: [id])
//   sys_testId Int
// }

// enum sys_test_type {
//   SINGLE //单选
//   MULTIPLE //多选
//   JUDGE //判断
// }

// //模拟测试章节
// model sys_test_chapter_item {
//   id                Int                 @id @default(autoincrement())
//   createAt          DateTime            @default(now())
//   updateAt          DateTime            @default(now()) @updatedAt
//   name              String
//   desc              String?
//   PDF               String?
//   PPT               String?
//   one2one           String?
//   outline           String?
//   video             String?
//   money             Int                 @default(0)
//   is_test           Boolean             @default(false)
//   order             Int                 @default(0)
//   sys_test_question sys_test_question[]
//   chapter           sys_test_chapter[]
// }

// //模拟测试题目章节分组
// model sys_test_chapter {
//   id                      Int                    @id @default(autoincrement())
//   createAt                DateTime               @default(now())
//   updateAt                DateTime               @default(now()) @updatedAt
//   name                    String
//   desc                    String?
//   order                   Int                    @default(0)
//   sys_test_paper          sys_test_paper[]
//   sys_test_chapter_item   sys_test_chapter_item? @relation(fields: [sys_test_chapter_itemId], references: [id])
//   sys_test_chapter_itemId Int?
// }

// //模拟测试题目
// model sys_test_question {
//   id                         Int                          @id @default(autoincrement())
//   createAt                   DateTime                     @default(now())
//   updateAt                   DateTime                     @default(now()) @updatedAt
//   title                      String
//   answer                     String                       @db.Text
//   type                       sys_test_type
//   time                       Int                          @default(0)
//   is_free                    Boolean                      @default(false)
//   context                    String                       @db.Text
//   order                      Int                          @default(0)
//   chapter                    sys_test_chapter_item        @relation(fields: [sys_test_chapter_itemId], references: [id])
//   test_count                 Int                          @default(0)
//   test_right_count           Int                          @default(0)
//   sys_test_paper_on_question sys_test_paper_on_question[]
//   sys_test_chapter_itemId    Int
// }

// //模拟测试资源
// model sys_test_source {
//   id         Int       @id @default(autoincrement())
//   createAt   DateTime  @default(now())
//   updateAt   DateTime  @default(now()) @updatedAt
//   name       String
//   href       String
//   sys_test   sys_test? @relation(fields: [sys_testId], references: [id])
//   sys_testId Int?
// }

// //考试
// model sys_test_paper {
//   id                      Int                       @id @default(autoincrement())
//   createAt                DateTime                  @default(now())
//   updateAt                DateTime                  @default(now()) @updatedAt
//   user                    sys_user                  @relation(fields: [sys_userId], references: [id])
//   sys_userId              Int
//   paper                   sys_test_chapter          @relation(fields: [sys_test_chapterId], references: [id])
//   sys_test_chapterId      Int
//   is_end                  Boolean                   @default(false)
//   correct                 Int                       @default(0)
//   wrong                   Int                       @default(0)
//   un_answer               Int                       @default(0)
//   score                   Int                       @default(0)
//   sys_test_paper_question sys_test_paper_question[]
// }

// //考试题目 on 考试
// model sys_test_paper_on_question {
//   paper                     sys_test_paper_question @relation(fields: [sys_test_paper_questionId], references: [id])
//   sys_test_paper_questionId Int
//   question                  sys_test_question       @relation(fields: [sys_test_questionId], references: [id])
//   sys_test_questionId       Int
//   answer                    String?

//   @@id([sys_test_paper_questionId, sys_test_questionId])
// }

// // 考试题目
// model sys_test_paper_question {
//   id               Int                          @id @default(autoincrement())
//   createAt         DateTime                     @default(now())
//   updateAt         DateTime                     @default(now()) @updatedAt
//   paper            sys_test_paper               @relation(fields: [sys_test_paperId], references: [id])
//   sys_test_paperId Int
//   questions        sys_test_paper_on_question[]
// }
